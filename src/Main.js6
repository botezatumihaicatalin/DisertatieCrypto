import WebCamera from 'webcamjs'
import ImageCrypto from 'chaotic-image-crypto/lib/bindings'

WebCamera.attach('#camdemo');

WebCamera.on('live', () => {

  const canvasEncrypted = document.getElementById('encrypted')
  const contextEncrypted = canvasEncrypted.getContext('2d');

  const canvasDecrypted = document.getElementById('decrypted')
  const contextDecrypted = canvasDecrypted.getContext('2d');

  const pollInterval = 50
  const snap = () => {
    WebCamera.snap((data_uri, canvas, context) => {
      console.log(canvas.width, canvas.height)
      const webcamImageData = context.getImageData(0, 0, canvas.width, canvas.height)
      const webcamPixels = Uint8Array.from(webcamImageData.data)
      // console.time('Encryption')
      // const encryptedPixels = ImageCrypto.Encrypt(webcamPixels)
      // console.timeEnd('Encryption')

      // const encryptedImgData = contextEncrypted.getImageData(0, 0, canvas.width, canvas.height);
      // encryptedImgData.data.set(encryptedPixels, 0)
      // contextEncrypted.putImageData(encryptedImgData, 0, 0);

      // console.time('Decryption')
      // const decryptedPixels = ImageCrypto.Decrypt(encryptedPixels)
      // console.timeEnd('Decryption')

      contextDecrypted.drawImage(canvas, 0, 0)

      // const decryptedImgData = contextEncrypted.getImageData(0, 0, canvas.width, canvas.height);
      // decryptedImgData.data.set(webcamPixels, 0)
      // contextDecrypted.putImageData(decryptedImgData, 0, 0);

      setTimeout(snap, pollInterval);
    })
  }

  snap();
})

window.addEventListener('beforeunload', () => {
  WebCamera.reset();
})

